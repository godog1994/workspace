public class TestPascal {

    /**
     * Method pascal - Computes the array of integers in
     * line n of Pascal's triangle (1st line is line 1).
     * 
     * Returns an array of n integers.
     * 
     */
    
    public static int[] pascal(int n) {
        int[] line; // Result array
        if (n < 1) {
            // Error - return empty array
            line = new int[0];
        } else if (n == 1) {
            // First line only contains the integer 1
            line = new int[] {1};
        } else {
            // For other lines, compute the current line
            // from the previous line.
    
            // Previous line
            int[] prev = pascal(n-1); 
            
            // Current line
            line = new int[n];

            // The two outer elements are always 1
            line[0] = 1;
            line[n-1] = 1;
            
            // Inner elements are sum of the two 
            // adjacent elements in previous line
            for (int j = 1; j < n-1; j++) {
               line[j] = prev[j-1] + prev[j];
            }
        }
        return line;
    }
    
    public static void main(String[] args) {
        
        // Print the first 10 lines of Pascal's triangle
        for (int i = 0; i < 10; i++) {
            System.out.print("Line "+(i+1)+": ");
            int[] line = pascal(i+1);
            for (int j = 0; j < line.length; j++) {
               System.out.print(line[j]+" ");
            }
            System.out.println();
        }
    }
}

Read more: How do I write a method which returns the Nth line of Pascals" - JustAnswer http://www.justanswer.com/computer-programming/2zjds-write-method-returns-nth-line-pascal-s-quot.html#ixzz2BQE2JBCH